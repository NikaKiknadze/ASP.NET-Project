// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApiProject.Data;

#nullable disable

namespace TestApiProject.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestApiProject.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterHealth")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CharacterType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Characters", "game");
                });

            modelBuilder.Entity("TestApiProject.Entities.CharactersSuperpowersJoin", b =>
                {
                    b.Property<int>("SuperPowerId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("SuperPowerId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharactersSuperpowersJoin", "game");
                });

            modelBuilder.Entity("TestApiProject.Entities.SuperPowers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HealthGain")
                        .HasColumnType("int");

                    b.Property<string>("PowerName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SuperPowers", "game");
                });

            modelBuilder.Entity("TestApiProject.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Users", "game");
                });

            modelBuilder.Entity("TestApiProject.Entities.CharactersSuperpowersJoin", b =>
                {
                    b.HasOne("TestApiProject.Entities.Character", "Character")
                        .WithMany("CharactersSuperpowers")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestApiProject.Entities.SuperPowers", "SuperPower")
                        .WithMany("CharactersSuperpowers")
                        .HasForeignKey("SuperPowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("SuperPower");
                });

            modelBuilder.Entity("TestApiProject.Entities.User", b =>
                {
                    b.HasOne("TestApiProject.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TestApiProject.Entities.Character", b =>
                {
                    b.Navigation("CharactersSuperpowers");
                });

            modelBuilder.Entity("TestApiProject.Entities.SuperPowers", b =>
                {
                    b.Navigation("CharactersSuperpowers");
                });
#pragma warning restore 612, 618
        }
    }
}
